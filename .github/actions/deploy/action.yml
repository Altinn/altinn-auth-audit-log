name: "Deploy audit-log to environment"
description: "Deploy audit-log to a given environment"
inputs:
  image-name:
    description: "The name of the image to deploy"
    required: false
    type: string
    default: ghcr.io/altinn/altinn-auth-audit-log
  image-tag:
    description: "The tag of the image to deploy"
    required: true
    type: string
  container-name:
    description: "The name of the container in the containerapp"
    required: false
    type: string
    default: auditlog
  resource-group:
    description: "The name of the resource group in Azure"
    required: true
    type: string
  container-app:
    description: "The name of the containerapp in Azure"
    required: true
    type: string
  function-app:
    description: "The name of the functionapp in Azure"
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Test
      run: az account show
      shell: bash

    - name: Deploy Image to ContainerApp
      shell: bash
      env:
        NAME: ${{ inputs.container-app }}
        CONTAINER_NAME: ${{ inputs.container-name }}
        RESOURCE_GROUP: ${{ inputs.resource-group }}
        IMAGE: ${{ inputs.image-name }}:${{ inputs.image-tag }}
      run: |
        az containerapp update \
          --name $NAME \
          --container-name $CONTAINER_NAME \
          --resource-group $RESOURCE_GROUP \
          --image $IMAGE
# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAME: altinn/altinn-auth-audit-log:${{ github.event.release.tag_name }}
#   CONTAINER_APP_CONTAINER_NAME: auditlog
#   deploy-tt02:
#     environment: TT02
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read
#       packages: read
#     steps:
#     - name: Azure Login
#       uses: azure/login@v1
#       with:
#         client-id: ${{ secrets.AZURE_CLIENT_ID }}
#         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#     - name: Deploy to containerapp
#       uses: azure/CLI@v1
#       with:
#         inlineScript: >
#           az config set extension.use_dynamic_install=yes_without_prompt

#           az containerapp update \
#             --name ${{ vars.CONTAINER_APP_NAME }} \
#             --container-name ${{ env.CONTAINER_APP_CONTAINER_NAME }} \
#             --resource-group ${{ vars.CONTAINER_APP_RESOURCE_GROUP_NAME }} \
#             --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
