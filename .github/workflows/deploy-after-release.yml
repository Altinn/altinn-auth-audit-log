run-name: Deploy version ${{ github.event.release.tag_name }} to TT02 and Production
on:
  release:
    types: [released]

env:
  DOTNET_VERSION: '8.0.x'
  REGISTRY: ghcr.io
  REPOSITORY: altinn/altinn-auth-audit-log


jobs:
  tag-image:
    name: Tag image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add Version tag to Docker Image
        uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ${{ env.REGISTRY }}
          repository: '${{ env.REPOSITORY }}'
          target: ${{ github.sha }}
          tags: ${{ github.event.release.tag_name }}

  build-function-app:
    name: Build Function App
    runs-on: windows-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore
        shell: bash
        working-directory: ./src/Functions/Altinn.Auth.AuditLog.Functions
        run: dotnet restore

      - name: Build
        shell: bash
        working-directory: ./src/Functions/Altinn.Auth.AuditLog.Functions
        run: dotnet build --configuration Release --no-restore

      - name: Publish
        shell: bash
        working-directory: ./src/Functions/Altinn.Auth.AuditLog.Functions
        run: dotnet publish --configuration Release --no-build --output ./output

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: function-app
          path: ./src/Functions/Altinn.Auth.AuditLog.Functions/output/
          include-hidden-files: true

  deploy-tt02:
    name: Deploy to TT02
    runs-on: ubuntu-latest
    environment: TT02
    needs:
      - tag-image
      - build-function-app

    permissions:
      id-token: write
      contents: read
      packages: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download built function-app
        uses: actions/download-artifact@v4
        with:
          name: function-app
          path: ./artifacts/function-app

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: ./.github/actions/deploy
        name: Deploy
        with:
          image-tag: ${{ github.sha }}
          resource-group: ${{ vars.CONTAINER_APP_RESOURCE_GROUP_NAME }}
          container-app: ${{ vars.CONTAINER_APP_NAME }}
          function-app: ${{ vars.AZURE_FUNCTIONAPP_NAME }}
          function-app-path: ./artifacts/function-app

  deploy-prod:
    environment: PROD
    runs-on: ubuntu-latest
    needs:
      - tag-image
      - build-function-app
      - deploy-tt02

    permissions:
        id-token: write
        contents: read
        packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download built function-app
        uses: actions/download-artifact@v4
        with:
          name: function-app
          path: ./artifacts/function-app

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: ./.github/actions/deploy
        name: Deploy
        with:
          image-tag: ${{ github.sha }}
          resource-group: ${{ vars.CONTAINER_APP_RESOURCE_GROUP_NAME }}
          container-app: ${{ vars.CONTAINER_APP_NAME }}
          function-app: ${{ vars.AZURE_FUNCTIONAPP_NAME }}
          function-app-path: ./artifacts/function-app
